$mixinPropsPrefixes = {
  border-radius: webkit moz,
  box-sizing: webkit moz,
  box-shadow: webkit moz,
  appearance: webkit moz,
  text-size-adjust: webkit moz ms,
  text-overflow: ms o,
  word-wrap: ms,
  hyphens: webkit moz ms,
  font-kerning: webkit,
  user-select: webkit khtml moz ms,
  backface-visibility: webkit moz ms o,
  filter: webkit,

  flex: webkit ms,
  flex-basis: webkit,
  flex-direction: webkit ms,
  order: webkit ms-flex,

  animation: webkit moz o,
  animation-delay: webkit moz o,
  animation-direction: webkit moz o,
  animation-duration: webkit moz o,
  animation-iteration-count: webkit moz o,
  animation-name: webkit moz o,
  animation-play-state: webkit moz o,
  animation-timing-function: webkit moz o,
  animation-fill-mode: webkit moz o,

  transition: webkit moz o,
  transition-delay: webkit moz o,
  transition-duration: webkit moz o,
  transition-property: webkit moz o,
  transition-timing-function: webkit moz o,

  transform: webkit moz ms o,
  transform-origin: webkit moz ms o,
  transform-style: webkit moz ms o,

  perspective: webkit moz ms o,
  perspective-origin: webkit moz ms o,

  columns: webkit moz,
  columns-count: webkit moz,
  columns-rule: webkit moz,
  columns-width: webkit moz,
  columns-fill: webkit moz,
}

$mixinMsFlexboxVals = {
  flex-start: start,
  flex-end: end,
  space-between: justify,
  space-around: distribute,
}

$mixinBgGradients = {
  args: linear-gradient radial-gradient conic-gradient repeating-linear-gradient repeating-radial-gradient repeating-conic-gradient,
  prefixes: webkit moz o,
}


border-radius()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

box-sizing()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

box-shadow()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

appearance()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

text-size-adjust()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

text-overflow()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

word-wrap()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

hyphens()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

font-kerning()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

user-select()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

backface-visibility()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

filter()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

flex()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

flex-basis()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

flex-direction()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

order()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

animation()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

animation-delay()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

animation-direction()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

animation-duration()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

animation-iteration-count()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

animation-name()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

animation-play-state()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

animation-timing-function()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

animation-fill-mode()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

transition()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

transition-delay()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

transition-duration()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

transition-property()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

transition-timing-function()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

transform()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

transform-origin()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

transform-style()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

perspective()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

perspective-origin()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

columns()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

columns-count()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

columns-rule()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

columns-width()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])

columns-fill()
  getXBrowserProps(arguments, $mixinPropsPrefixes[current-property[0]])


/* Crossbrowser position sticky */
position(val)
  applyPropMixin(@block {
    if val == sticky {
      position: -webkit-sticky
      position: sticky
    } else {
      position: val
    }
  })


/* Crossbrowser display flex */
display(val)
  applyPropMixin(@block {
    if val == flex {
      display: -webkit-flex
      display: -ms-flex
      display: flex
    } else if val == inline-flex {
      display: -webkit-inline-flex
      display: -ms-inline-flexbox
      display: inline-flex
    } else {
      display: val
    }
  })


/* Crossbrowser flex properties with different syntax */
flex-grow(val)
  applyPropMixin(@block {
    -webkit-flex-grow: val
    -ms-flex: val
    flex-grow: val
  })

flex-shrink(val)
  applyPropMixin(@block {
    -webkit-flex-shrink: val
    -ms-flex: val
    flex-shrink: val
  })

flex-flow()
  applyPropMixin(@block {
    -webkit-flex-flow: arguments
    -ms-flex-flow: arguments[0] (arguments[1] and arguments[1] == nowrap ? none : arguments[1])
    flex-flow: arguments
  })

flex-wrap(val)
  applyPropMixin(@block {
    -webkit-flex-wrap: val
    -ms-flex-wrap: (val == nowrap ? none : val)
    flex-wrap: val
  })

justify-content(val)
  applyPropMixin(@block {
    -webkit-justify-content: val
    -ms-flex-pack: ($mixinMsFlexboxVals[val] ? $mixinMsFlexboxVals[val] : val)
    justify-content: val
  })

align-items(val)
  applyPropMixin(@block {
    -webkit-align-items: val
    -ms-flex-align: ($mixinMsFlexboxVals[val] ? $mixinMsFlexboxVals[val] : val)
    align-items: val
  })

align-content(val)
  applyPropMixin(@block {
    -webkit-align-content: val
    -ms-flex-line-pack: ($mixinMsFlexboxVals[val] ? $mixinMsFlexboxVals[val] : val)
    align-content: val
  })

align-self(val)
  applyPropMixin(@block {
    -webkit-align-self: val
    -ms-flex-item-align: ($mixinMsFlexboxVals[val] ? $mixinMsFlexboxVals[val] : val)
    align-self: val
  })


/* Extending crossbrowser gradients */
background()
  extendPropWithXArgs($mixinBgGradients.args, $mixinBgGradients.prefixes)

background-image()
  extendPropWithXArgs($mixinBgGradients.args, $mixinBgGradients.prefixes)


/* Crossbrowser fields placeholder */
placeholder()
  for $prefix in ('::-webkit-input-' ':-ms-input-' '::-ms-input-' ':-moz-' '::-moz-' '::')
    &{$prefix}placeholder
      {block}


/* Styling parent text selection */
selection($bg = #bb6bd9, $text = #020301)
  for $prefix in ('::-moz-' '::')
    & {$prefix}selection
      background-color: $bg
      color: $text
      text-shadow: none


/* Styling scrollbar */
scroll($barBg = #fff, $thumbBg = #333, $thumbHoverBg = #444, $borderColor = transparent)
  if $barBg == 'none'
    -ms-overflow-style none

    &::-webkit-scrollbar
      display none

      &-button, &-thumb, &-track, &-corner
        display none
  else
    -ms-overflow-style -ms-autohiding-scrollbar

    &::-webkit-scrollbar
      if $borderColor != transparent
        width .5em
        height .5em
      else
        width .25em
        height .25em
      background-color ($barBg ?: transparent)

      &-button
        width 0
        height 0
        background transparent

      &-thumb
        if $borderColor != transparent
          border .125em solid $borderColor
          border-radius .25em
        else
          border-radius .125em
        background-color $thumbBg

        &:hover
          background-color $thumbHoverBg

      &-track
        margin px2em(2)
        background-color $borderColor

      &-corner
        background-color $barBg


/* Imitation crossbrowser mixin for css calc() function */
// calc() {
//   if (current-property) {
//     for $prefix in (webkit moz) {
//       add-property(current-property[0], s('-%s-calc(%s)', $prefix, arguments));
//     }
//     s('calc(%s)', arguments);
//   } else {
//     error('calc() must be used within a property');
//   }
// }
